CREATE OR REPLACE FUNCTION createClass(description text)
RETURNS void AS $$
BEGIN
INSERT INTO class(classdescription) VALUES (description);
END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION assignMentor(idMentor integer, idClass integer)
RETURNS void AS $$
BEGIN
INSERT INTO mentor_class VALUES (idMentor, idClass);
END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION createStudent(userSurname text, username text, useremail text, userlogin text, userpass text, idrole integer, githubacc text)
RETURNS void AS $$
BEGIN
INSERT INTO student(githubadress, coolcoins, xppoints, iduser) VALUES (githubacc, 0, 0, createUser(userSurname, username, useremail, userlogin, userpass, idrole));
END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION createUser(surname text, firstname text, mail text, login text, userpass text, idrole integer)
RETURNS integer AS $userid$
BEGIN
INSERT INTO users(usersurname, username, useremail, userlogin, userpassword, idcodecoolrole)
VALUES (surname, firstname, mail, login, userpass, idrole);
RETURN (SELECT iduser FROM users WHERE users.usersurname = surname AND users.username = firstname AND users.useremail = mail AND users.userlogin = login AND users.userpassword = userpass AND users.idcodecoolrole = idrole);
END;
$userid$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION markArtifact(personalartifactid integer)
RETURNS void $$
BEGIN
UPDATE personalartifacthistory
SET isused = true
WHERE personalartifacthistory.idpersonalartifacthistory = personalartifactid;
END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION updateartifact(artid integer, newcost integer)
RETURNS void AS $updatedartifact$
BEGIN
UPDATE artifact SET currentartifactcost = newcost
WHERE artid = idartifact;
END;
$updatedartifact$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION updateQuest(questid integer, newcost integer)
RETURNS void AS $updatedartifact$
BEGIN
UPDATE quest SET questvalue = newcost
WHERE questid = idquest;
END;
$updatedartifact$ LANGUAGE plpgsql;